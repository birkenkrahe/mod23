#+startup: overview inlineimages indent hideblocks
#+property: header-args:python :results output
* README

- Notes usually based on whiteboard screenshots ([[https://drive.google.com/drive/folders/1VzxUI_fhy2fXkzjfHHUtEK9NuRYLatij?usp=sharing][GDrive]]).
- Includes further reading, watching and comments

* 1.1 Aug-22

- How to read a paper (objective/subjective/reflective)
- Version control differences with Git
- AMA citation style for references
- Business Process Model and Notation (BPMN) at bpmn.io
- Literate programming (programs for humans) with Emacs + Org-mode,
  VSCode + plugins, Google Colaboratory: story + code = (tangled)
  source code + (woven) documentation
- Notebooks: doc + code + output = story

* 1.2 Aug-24

- Assigned: complex systems: paper by Parisi (2013)
- Lattice Gauge Theory (discretized particle theory)
- Infinite skills and resources (what would you do?)
- Minard's visualization of Napoleon's march on Moscow
- Sankey diagram (also used for network flow analysis)
- DataCamp workspace notebook platform: overview and structure
- IPython shell (in a Python3 shell in a bash shell)
- IPython magic (OS shell) commands (~%alias~, ~%whos~ etc.)
- Python packages or libraries: NumPy, SciPy, Matplotlib, pandas,
  print, Jupyter, modSim
- Using the AI (GPT-4?) to fix errors and suggest coding solutions

* 2.1 Aug-29
** 1st sprint review and solo project ([[https://lyon.instructure.com/courses/1443/pages/solo-modeling-project][sign in]])

*Sources for your projects:*
- Personal pet projects (e.g. political science)
- My issues list at GitHub ([[https://github.com/birkenkrahe/mod482/issues][mod482]] or [[https://github.com/birkenkrahe/mod23/issues][mod23]])

*Topics examples*:
- "Modeling the creative process: benefits, methods and feasibility"
- "The effects of eliminating gas burning cars in the US"
- "Introduction to simulation modeling and its application in
  engineering"
- "Why Failure?"

*Format examples:*
- Essay (minimum 2,500 words - ca. 5 pages, with references).
- Equivalent Jupyter notebook with an analysis (the Workbook demo has
  about 2,500 words), fully documented, with code and output.

See also : [[https://dl.acm.org/doi/pdf/10.1145/268437.268440][Introduction to Modeling and Simulation]] (Maria, 1997)

** Test 1 (open in Canvas now until September 3)

** Review

- Which tools does DataCamp workspace offer?
  #+begin_quote
  1) Interactive notebook with text cells, Python and SQL code cells,
     AI assistance.
  2) Jupyter Lab with launcher for: file editor, console, markup file,
     terminal (shell), notebook.
  3) File management (upload, convert to data frame, SQL cell).
  4) Environment settings including notebook kernel, loaded Python
     packages, and environment variables (for the Linux OS).
  #+end_quote

- What is IPython?
  #+begin_quote
  Command shell for interactive computing originally only in Python,
  now also allowing notebooks in Julia, Python and R.
  #+end_quote

- How can you get help for a Python function?
  #+begin_quote
  With the ~help~ function - but you need to know which package the
  function is from, e.g. ~pd.unique~ in ~pandas~, or ~np.array~ in NumPy.
  #+end_quote
  #+begin_src python
    import pandas as pd
    print(pd.unique.__module__)
    help(pd.core.algorithms)
  #+end_src

- How reliable is the AI coding assistance?

- Which Python functions did we use? (6)
  #+begin_example python
    import
    as
    help
    print
    pandas.read_csv
    pandas.unique
  #+end_example

** Discussion: Parisi "Complexity"

1) What caused the "paradigm change" in science?
   #+begin_quote
   The distinction between macroscopic and microscopic properties, and
   the growing interest in large systems (of many objects) over longer
   periods of time. (Statistical, quantum mechanics, complex systems.)
   #+end_quote

2) What is the old and the new meaning of "prediction"?
   #+begin_quote
   *Classic, deterministic prediction:* given knowledge of the initial
   state of an object, we can fully determine the final state.

   *Stochastic prediction:* some quantities can be predicted and have
   always the same value, others vary and can be treated
   probabilistically (i.e. with distributions instead of equations).
   #+end_quote

3) What's characteristic for "chaotic" systems?
   #+begin_quote
   The trajectory of moving objects cannot be predicted for large
   times, only for small times (example: two billard balls).

   In many cases, the probability distribution at large times for
   finding the system in a particular configuration is independent on
   the initial conditions and can be predicted.

   Statistical mechanics does the same thing for "chaotic" systems
   that classical mechanics does for non-chaotic systems.
   #+end_quote

4) What is a "complex" system?
   #+begin_quote
   "A system is complex if its behavior crucially depends on the
   details of the system".
   #+end_quote

5) What is the meaning of prediction for complex systems?
   #+begin_quote
   Predictions are of a probabilistic nature - it does not tell us
   properties of an individual object but only distributions.

   Experiments with large number of objects (statistically
   significant) are necessary to verify the accuracy of the
   prediction.
   #+end_quote

6) What does it mean that 'physical reasoning' has more applications?
   #+begin_quote
   For us it means that modeling and computer simulation become more
   important as instruments of experimentation and insight.

   For science, it means that more areas of life and the universe
   can be tackled with the fairly well-understood methods of physics.
   #+end_quote

7) In which area has the new complexity science made the greatest
   progress so far?
   #+begin_quote
   Neural networks. Generative AI and deep learning AI are
   applications of that.

   See also (since 2020): Laporte algorithm in particle physics
   (large scale integration).
   #+end_quote

8) What is Parisi's final message and verdict? (In your own words)
   #+begin_quote
   The new stochastic approach will enable us to address many
   previously inaccessible biological problems that are related to the
   properties of whole systems rather than individual objects
   (e.g. protein folding, or the flight of swarms of birds, or the
   dynamics of climate change).
   #+end_quote

** Summary

- The course project is an independent research effort. Creating the
  proposal should not take less than 2 hours. You should sign into
  Canvas with a topic idea.
- The sprint reviews follow the IMRaD structure of scientific
  publications. The proposal criteria for the first sprint review are
  laid out in Canvas.
- You should pick a topic that you know already or that you have a lot
  of energy to explore at length. See also GitHub issues for ideas.
- Parisi's 2013 (actually: 2002) paper has a couple of precursors:
  Schr√∂dinger's 1944 book "What is life?" (physics and biology) and
  Kuhn's 1962 "The structure of scientific revolutions" (paradigm
  change in science).
- There may be a paradigm change afoot, and the recent AI craze may be
  a sign or symptom - according to Kuhn, a growing number of anomalies
  (evidence that cannot be explained with the current paradigm) will
  herald a new paradigm.
- Parisi characterises the new paradigm technically as a move from a
  strong, classical definition of prediction to a weaker,
  probabilistic definition of prediction.
- Investigating large complex systems using probability distributions
  of large samples over long periods of time yields insights in the
  properties of the whole system instead of only its constituents.

* 2.2 Aug-31
** Summary

- Import CSV data as pandas data frame.
- Extract values from a data frame column vector, for example
  in ~df['Category']~.
- Extracting only unique values: ~df['Category'].unique()~.
- ~[]~ as ~list~ delimiter, for example ~[1,2,3]~.
- Dot operator ~.~ to access methods and attributes, for example
  ~pd.unique~ (method) or ~df.shape~ (attribute).
- Origin of ~NameError~: name of object is not defined.
- Replacing values in data frame, for example with
  ~df.replace(to_replace,value)~
- Difference between positional and keyword function arguments
- Creating a barplot with ~plotly.express.bar~.
- Creating a barplot with ~matplotlib.pyplot.bar~.
- Customizing ~plt~ barplot with title, labels, gridlines.
- Accessing all contents of a module with ~dir~, for example with
  ~dir(plt.bar)~.
- Using auto-completion in IPython to see what's available.

[[https://app.datacamp.com/workspace/w/54035cd7-348d-43b9-b951-5a7c94725477][Completed notebook from the class.]]

* 3.1 Sep-5
** Term project: 1st sprint review approaching!

Remember that you can double up with other courses by using projects
that you must complete there, or vice versa.

1) [[https://lyon.instructure.com/courses/1443/pages/solo-modeling-project][Enter project topic]]
2) [[https://lyon.instructure.com/courses/1443/assignments/18049][Submit proposal]]

** Read: Dorner's "Logic of Failure"

1. What has Dorner primarily investigated?
2. How has he carried out his investigations?
3. What is his definition of a complex system?
4. How did his subjects deal with complex systems?
5. What is the psychological background of this behavior?
6. Which behaviors are successful in the long term?
7. What is Dorner's final message?

** Review of last week (practice)/test preview:
*** Test 1
- What is Git?
  #+begin_quote
  THE version control program created by Linus Torvalds also creator
  of the Linux kernel and head of the Linux software project.
  #+end_quote
- What is Literate Programming
  #+begin_quote
  In interactive notebooks, doc + code can be tangled and woven, but
  that's not the key purpose. In "classical litprog", this is the
  purpose.

  In interactive notebooks, doc + code + output is assembled to allow
  telling a story with the data.
  #+end_quote
- What does the AI assistant in workspace NOT do?
  #+begin_quote
  1) answer general questions (except "what's the meaning of life?")
  2) Propose code and run it (it only proposes, you run it)
  #+end_quote
*** Review

When I read the question, ask yourself if you know the answer.

1. What's the format of your final project?
   #+begin_quote
   Essay or notebook with references, no less than 2,500 words.
   #+end_quote
2. What's a paradigm?
   #+begin_quote
   A widely accepted framework of theories and practices that guides a
   field of study - like "Classical mechanics" for physics.

   Don't mix it up with: trend, an anomaly (deviation/outlier), or a
   fad/fashion.
   #+end_quote
3. Can you predict motion of objects in a chaotic system?
   #+begin_quote
   Yes, but only for small times, not for large times.
   #+end_quote
4. What's the nature of a prediction in complex systems?
   #+begin_quote
   Probabilistic (distributions) rather than deterministic (exact).
   #+end_quote
5. What's a data frame?
   #+begin_quote
   A tabular (rectangular) format to store CSV files, a data structure
   in Python's ~pandas~ library, and a class with methods (like ~unique~)
   and attributes (like ~shape~).
   #+end_quote
6. What do these errors mean: ~SyntaxError~, ~NameError~, ~ValueError~, and
   ~TypeError~?
   1) ~SyntaxError~: using a reserved keyword as a variable name.
      #+begin_src python :results silent
        x = import
      #+end_src
   2) ~NameError~: a variable name is not defined.
      #+begin_src python :results silent
        print(x)
      #+end_src
   3) ~ValueError~:
      #+begin_src python :results silent
        int("42") # not a value error because of standard coercion
        int("a") # ValueError because Python doesn't know how to
      #+end_src
   4) ~TypeError~: applying a function to the wrong object.
      #+begin_src python :results silent
        x = 1
        x()
      #+end_src
7. How can you extract all rows of column 3 from the dataframe ~df~?
   #+begin_example python
     df[,3]
   #+end_example
8. What do you need to do before you can use the function ~plt.bar~?
   #+begin_src python
     import matplotlib.pyplot as plt
   #+end_src

*** Problem

Let's look at the test results using Python:
1) Create a new Python notebook ([[https://tinyurl.com/26zup6cm][tinyurl.com/26zup6cm]])
2) Import ~matplotlib.pyplot~ for graphics.
3) Create a list of test values called ~test~ (using ~[]~).
4) Plot the list as a histogram (using ~plt.hist~).
5) Add x and y labels and a title.

*** Solution

The solution notebook is [[https://app.datacamp.com/workspace/w/adcb3d21-4098-4613-8444-2ce29cfaae4e][here]].

The code is here:
#+begin_src python :results silent
  import matplotlib.pyplot as plt
  test = [4.67, 5.17, 5.33, 6.67, 7.17, 7.83, 8.5]
  plt.hist(test,bins="auto",edgecolor="black")
  plt.xlabel("Points")
  plt.ylabel("Count")
  plt.title("Histogram of first test results")
  plt.show()
#+end_src

** Modeling framework (lecture & discussion)
** Summary

- Models are formal structures that help us understand the world
  through mathematical and/or diagrammatic (visual) representation.

- The standard modeling workflow goes:
  1) from system via abstraction to model.
  2) from model via analysis and simulation to prediction.
  3) from prediction to data for validation (and back).
  4) from system to data through measurements.

- An alternative (mathematical) modeling flow:
  1) real world data are simplified and produce a
  2) model, which is analysed to obtain
  3) mathematical conclusions which we interpret to get
  4) predictions (future) or explanations (past), which are
  5) verified through real-world data.

- Examples of model scenarios: weather forecasts, stock market
  predictions, and epidemic process predictions.

* 3.2 Sep-7
** Dorner "Logic of Failure" (1990)
#+options: toc:nil num:nil
- Deep reading of D√∂rner's article.
- Comparison of D√∂rner's and Parisi's approach to complexity.
- Apply D√∂rner's criteria to different systems.

Questions and Answers:
1. *What has D√∂rner primarily investigated?*
   #+begin_quote
   Dorner investigated "the manner in which humans deal with the
   unexpected and with uncertainty", in other words: planning.

   Later in the course, we'll look at another approach to planning for
   uncertainty, 'scenario planning' ([[https://youtu.be/yVgxZnRT54E?si=Qc2u4ZnA6IQo3Le4][see video]]).

   More specifically, he investigated "the action strategies
   implemented by persons in coping with extremely complex, dynamic,
   intransparent and uncertain systems."
   #+end_quote
2. *How has he carried out his investigations?*
   #+begin_quote
   He used computer-simulated scenarios with a large number of feature
   variables. The scenario was the "Moro region in West Africa (Bukina
   Faso)", which you won't find on a map. The language or implementation
   used for these simulations was not shared.

   There is, and always have been, many simulation software
   packages. Here is a list from Wikipedia - most of these are for
   engineering not economic or system-wide simulations. Someone
   interested in simulation could ask Prof Staples who's most likely to
   know more about this.

   D√∂rner calls these simulations "experiments". *What are the
   implications?* - Experiments are controlled, repeatable, and
   generalizable. Only the last aspect is highlighted here.

   D√∂rner's experiments were also quantitative - he presents a
   multitude of graphs and data points. This, however, was not an
   experiment on the subject of the simulation but on the people!
   #+end_quote
3. *What is his definition of a complex system?*
   #+begin_quote
   "A system is extremely complex when it consists of a great variety
   of variables [that are] closely tied to one another, mutually
   affect one another, and constitute a network of interdependencies."

   See figure 3 (p.4) for an illustration:

   [[../img/dorner.png]]

   Why these three characterisations?
   *Variables are closely tied*: they are in the same part of the
   systemic action diagram (though not necessarily directly
   connected - degrees of separation). E.g. "birth rate" and
   "mortality" or "groundwater" and "cattle".

   This concept is used in "graph databases", a NoSQL database that
   uses graph theory to store, map and query
   relationships. Applications: power grids, disease transmission,
   computer circuitry, search engine ranking. See also: "Six
   degrees of separation" theory and "small world" research
   ([[https://hbr.org/2003/02/the-science-behind-six-degrees][see also: The science behind six degrees, HBR 2003]]).

   *Variables mutually affect each other*: variables are coupled so
   that a change in one variable changes another variable, e.g. an
   increase in "birth rate" increases, and an increase in
   "mortality" decreases the population.

   *Variables constitute a network of interdependencies*: there is a
   path from any variable to any other, no matter how far the
   distance across the network. (One could attach weights to the
   edges of the graph to make use of this fact.) A "neural network"
   algorithm is a more regular (mathematically closed) form of this
   type of network.

   "The uncertainty of the Moro system means that the acting
   subject has no complete knowledge about the system, about its
   variables and their interdependencies."

   #+end_quote
4. *How did his subjects deal with complex systems?*
   #+begin_quote
   He distinguishes between demands and actual behavior of the test
   subjects. The demands for regulation are visible in a process
   diagram (a so-called "happy path" or high-level choreography
   because there are no decisions modeled).

   [[../img/dornerdemands.png]]

   Two groups of participants are contrasted: 45 executives and
   students simulated the system over a period of 20 years.

   The executives did far better than the students.

   Observations:
   - Insufficient goal elaboration.
   - Insufficient formation of hypotheses about the structure of the
     system.
   - Insufficient ideas about the behavior of the system in time
     (blind linear extrapolation).
   - Insufficient coordination of different measures.
   - "Ballistic" action (not waiting and observing).
   - No self-reflection (not checking out the results of measures).
   #+end_quote
5. *What is the psychological background of this behavior?*
   #+begin_quote
   "Faulty modes of behavior" which sometimes serve humans well:
   - Low capacity of conscious information-processing
   - Tendency to guard one's feeling of competence
   - Too much weight on the actual problems (neglect side effects)
   - Forgetting (no memory of process over time, no model/map)
   #+end_quote
6. *Which behaviors are successful in the long term?*
   #+begin_quote
   "Strategic flexibility":
   1) Make plans before you act.
   2) Carry out plans and monitor success.
   3) Watch your data and your variables.
   4) Sometimes, don't plan and just trust yourself.

   Identify a best fit between the situation and the thinking/planning
   instead of using only one model/action plan.
   
   Is this useful for you as well?
   #+end_quote
7. *What is Dorner's final message?*
   #+begin_quote
   It is possible to learn strategic flexibility but it is difficult
   to teach it.

   You have to learn a lot of small, local rules applicable only in a
   small area.

   Simile: "The point is not to learn how to drive a steamroller with
   which one can flatten all problems in the same way, but to learn
   the adroitness of the puppeteer, who at one time holds many strings
   in his hands and who is able to adapt his movements to the given
   circumstances in the most sophisticated ways."
   #+end_quote

** SOMEDAY Pair exercise

D√∂rner's criteria:
1) Problem is polytelic (multiple simultaneous goals)
2) There is a great number of relevant variables
3) Variables are interdependent and we don't know how
4) Variables evolve dynamically and we don't know how
5) When handling the problem, "faulty modes of planning" were employed
   (like: 'ballistic' action instead of 'wait and monitor' etc.)

After identifying D√∂rner's list of criteria for complex systems, apply
test it on these phenomena ([[https://ideaboardz.com/for/Complexity/5050674][ideaboardz]]):
- The development of AI
- Handling Covid
- Handling Climate Change
- Handling Capitalism
- Handling Communism
- Introducing Electric cars
- Fighting zombies

When applying the criteria, make sure that you can name evidence, for
example in the form of a historical anecdote or fact.

* 4.1 Sep-12
** Vote for Lyon College this week!

Put this in your daily calendar for daily vote through September 15!
From Lyon marketing:
#+begin_quote
Lyon College is a finalist for best four-year college in the AMP
(Arkansas Money and Politics) Best of 2023!

You can vote once per day through Sept. 15! Go Scots!

https://arkansasmoneypolitics.secondstreetapp.com/og/e404fba6-f03f-4d70-939a-b72afd1dcb42/gallery/396819790
#+end_quote

** Projects - review

Let's discuss!

** Falling Penny Myth (practice & exercise)

Question: Would a penny dropped from the top of the Empire State
Building go so fast that it would be embedded in the concrete; or if
it hit a person would it break their skull?

[[https://app.datacamp.com/workspace/w/e58a55dd-9bfb-4490-b357-e237728e036b][Solution notebook (published)]]

[[https://youtu.be/1Vjd_FhrohE?si=a5BBujesR1CjHKJE][Video with experiments (YouTube)]]

** Thursday: no class - but exercises

- Use Thursday's class to firm up your proposal (to be submitted on
  Friday).

- You'll also get a few simple exercises to be completed by next
  Tuesday (in the form of a notebook - submission via link).

* 4.2 Sep-14 - NO CLASS (SPRINT REVIEW)

* 5.1 Sep-19
** Monthly summary

What was your personal highlight this last month?

What did you learn that you didn't know before and wouldn't want to
live without? (In other words: knowledge that shook your world.)
#+begin_quote
My highlights: Getting used to DataCamp workspace, analyzing the
articles by Parisi and Dorner, and using Python for modeling.
#+end_quote

*Concepts*
1. How to read a paper, and how to write a paper
2. Business Process Model and Notation (BPMN) models
3. Literate programming with interactive notebooks and IPython
4. Network flow ("Sankey") diagrams
5. Using generative AI to fix errors and suggestion solutions
6. Frameworks for modeling physical systems
7. Modeling complex systems stochastically √† la Parisi
8. Importing and working with data frames in Python
9. Plotting in Python
10. Python libraries
11. Modeling decisions in complex situations √† la Dorner
12. Modeling the Falling Penny Myth in three different ways
13. Python errors
14. Computation with units in Python

*Mixed Media*: Images, Videos, Games, Books
1. Charles Minard's Infographic of Napoleon's Invasion of Russia
2. The Raft of the Medusa by Theodore Gericault (1818)
3. Anabasis by Xenophon
4. Python Data Science Handbook by Jake Vanderplas
5. In a Flight of Starlings by Giorgio Parisi (2023)
6. What is Life by Erwin Schrodinger (1944)
7. The Model Thinker by Scott Page (2021)
8. The GNU Octave simulation programming language
9. Cities Skylines (ShhNowI'mPlaying, 2015)
10. San Francisco Bay model (Tom Scott, 2017)

*Papers*
1. "Complex Systems - A Physicist's Viewpoint" (Parisi, 2003)
2. "The Logic of Failure" (Dorner, 1999)
3. "The Unreasonable Effectiveness of Mathematics in the Natural
   Sciences" (Wigner, 1960)
4. Replica Studios Smart NPC Demo (TmarTn2, 2023)

** Challenge: "Fun to imagine"

What does our difficulty conceiving of large and small objects
mentioned by Feynman [[https://x.com/PhysInHistory/status/1703233323173319122?s=20][in this video]] mean for modeling phenomena at very
large and at very small distances, like atoms or stars?
#+begin_quote
It means, as Feynman does it throughout the video that we have to
translate findings to retain some intuition ("Anschauung" in German,
which is part of the English word "Weltanschauung" or "world
view"). These translations in the form of similes or metaphors are
meta-models. Meta-models are the elements of [[https://en.wikipedia.org/wiki/Web_Ontology_Language][OWL]], the Ontology Web
Language family for representing web content using classes.
#+end_quote

** Lecture and practice: Simulation model
* References

Maria A. /Introduction to Modeling and Simulation/. In: Andradottir S,
Healy KJ, Withers DH, Nelson BL, eds. Proceedings of the 1997 Winter
Simulation Conference; 1997. [[https://dl.acm.org/doi/pdf/10.1145/268437.268440][dl.acm.org/doi/pdf/10.1145/268437.268440]]
