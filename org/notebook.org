#+startup: overview inlineimages indent hideblocks
#+property: header-args:python :results output
* README

- Notes usually based on whiteboard screenshots ([[https://drive.google.com/drive/folders/1VzxUI_fhy2fXkzjfHHUtEK9NuRYLatij?usp=sharing][GDrive]]).
- Includes further reading, watching and comments

* Aug-22

- How to read a paper (objective/subjective/reflective)
- Version control differences with Git
- AMA citation style for references
- Business Process Model and Notation (BPMN) at bpmn.io
- Literate programming (programs for humans) with Emacs + Org-mode,
  VSCode + plugins, Google Colaboratory: story + code = (tangled)
  source code + (woven) documentation
- Notebooks: doc + code + output = story

* Aug-24

- Assigned: complex systems: paper by Parisi (2013)
- Lattice Gauge Theory (discretized particle theory)
- Infinite skills and resources (what would you do?)
- Minard's visualization of Napoleon's march on Moscow
- Sankey diagram (also used for network flow analysis)
- DataCamp workspace notebook platform: overview and structure
- IPython shell (in a Python3 shell in a bash shell)
- IPython magic (OS shell) commands (~%alias~, ~%whos~ etc.)
- Python packages or libraries: NumPy, SciPy, Matplotlib, pandas,
  print, Jupyter, modSim
- Using the AI (GPT-4?) to fix errors and suggest coding solutions

* Aug-29
** 1st sprint review and solo project ([[https://lyon.instructure.com/courses/1443/pages/solo-modeling-project][sign in]])

*Sources for your projects:*
- Personal pet projects (e.g. political science)
- My issues list at GitHub ([[https://github.com/birkenkrahe/mod482/issues][mod482]] or [[https://github.com/birkenkrahe/mod23/issues][mod23]])

*Topics examples*:
- "Modeling the creative process: benefits, methods and feasibility"
- "The effects of eliminating gas burning cars in the US"
- "Introduction to simulation modeling and its application in
  engineering"
- "Why Failure?"

*Format examples:*
- Essay (minimum 2,500 words - ca. 5 pages, with references).
- Equivalent Jupyter notebook with an analysis (the Workbook demo has
  about 2,500 words), fully documented, with code and output.

See also : [[https://dl.acm.org/doi/pdf/10.1145/268437.268440][Introduction to Modeling and Simulation]] (Maria, 1997)

** Test 1 (open in Canvas now until September 3)

** Review

- Which tools does DataCamp workspace offer?
  #+begin_quote
  1) Interactive notebook with text cells, Python and SQL code cells,
     AI assistance.
  2) Jupyter Lab with launcher for: file editor, console, markup file,
     terminal (shell), notebook.
  3) File management (upload, convert to data frame, SQL cell).
  4) Environment settings including notebook kernel, loaded Python
     packages, and environment variables (for the Linux OS).
  #+end_quote

- What is IPython?
  #+begin_quote
  Command shell for interactive computing originally only in Python,
  now also allowing notebooks in Julia, Python and R.
  #+end_quote

- How can you get help for a Python function?
  #+begin_quote
  With the ~help~ function - but you need to know which package the
  function is from, e.g. ~pd.unique~ in ~pandas~, or ~np.array~ in NumPy.
  #+end_quote
  #+begin_src python
    import pandas as pd
    print(pd.unique.__module__)
    help(pd.core.algorithms)
  #+end_src

- How reliable is the AI coding assistance?

- Which Python functions did we use? (6)
  #+begin_example python
    import
    as
    help
    print
    pandas.read_csv
    pandas.unique
  #+end_example

** Discussion: Parisi "Complexity"

1) What caused the "paradigm change" in science?
   #+begin_quote
   The distinction between macroscopic and microscopic properties, and
   the growing interest in large systems (of many objects) over longer
   periods of time. (Statistical, quantum mechanics, complex systems.)
   #+end_quote

2) What is the old and the new meaning of "prediction"?
   #+begin_quote
   *Classic, deterministic prediction:* given knowledge of the initial
   state of an object, we can fully determine the final state.

   *Stochastic prediction:* some quantities can be predicted and have
   always the same value, others vary and can be treated
   probabilistically (i.e. with distributions instead of equations).
   #+end_quote

3) What's characteristic for "chaotic" systems?
   #+begin_quote
   The trajectory of moving objects cannot be predicted for large
   times, only for small times (example: two billard balls).

   In many cases, the probability distribution at large times for
   finding the system in a particular configuration is independent on
   the initial conditions and can be predicted.

   Statistical mechanics does the same thing for "chaotic" systems
   that classical mechanics does for non-chaotic systems.
   #+end_quote

4) What is a "complex" system?
   #+begin_quote
   "A system is complex if its behavior crucially depends on the
   details of the system".
   #+end_quote

5) What is the meaning of prediction for complex systems?
   #+begin_quote
   Predictions are of a probabilistic nature - it does not tell us
   properties of an individual object but only distributions.

   Experiments with large number of objects (statistically
   significant) are necessary to verify the accuracy of the
   prediction.
   #+end_quote

6) What does it mean that 'physical reasoning' has more applications?
   #+begin_quote
   For us it means that modeling and computer simulation become more
   important as instruments of experimentation and insight.

   For science, it means that more areas of life and the universe
   can be tackled with the fairly well-understood methods of physics.
   #+end_quote

7) In which area has the new complexity science made the greatest
   progress so far?
   #+begin_quote
   Neural networks. Generative AI and deep learning AI are
   applications of that.

   See also (since 2020): Laporte algorithm in particle physics
   (large scale integration).
   #+end_quote

8) What is Parisi's final message and verdict? (In your own words)
   #+begin_quote
   The new stochastic approach will enable us to address many
   previously inaccessible biological problems that are related to the
   properties of whole systems rather than individual objects
   (e.g. protein folding, or the flight of swarms of birds, or the
   dynamics of climate change).
   #+end_quote

** Summary

- The course project is an independent research effort. Creating the
  proposal should not take less than 2 hours. You should sign into
  Canvas with a topic idea.
- The sprint reviews follow the IMRaD structure of scientific
  publications. The proposal criteria for the first sprint review are
  laid out in Canvas.
- You should pick a topic that you know already or that you have a lot
  of energy to explore at length. See also GitHub issues for ideas.
- Parisi's 2013 (actually: 2002) paper has a couple of precursors:
  Schrödinger's 1944 book "What is life?" (physics and biology) and
  Kuhn's 1962 "The structure of scientific revolutions" (paradigm
  change in science).
- There may be a paradigm change afoot, and the recent AI craze may be
  a sign or symptom - according to Kuhn, a growing number of anomalies
  (evidence that cannot be explained with the current paradigm) will
  herald a new paradigm.
- Parisi characterises the new paradigm technically as a move from a
  strong, classical definition of prediction to a weaker,
  probabilistic definition of prediction.
- Investigating large complex systems using probability distributions
  of large samples over long periods of time yields insights in the
  properties of the whole system instead of only its constituents.

* Aug-31

** Summary

- Import CSV data as pandas data frame.
- Extract values from a data frame column vector, for example
  in ~df['Category']~.
- Extracting only unique values: ~df['Category'].unique()~.
- ~[]~ as ~list~ delimiter, for example ~[1,2,3]~.
- Dot operator ~.~ to access methods and attributes, for example
  ~pd.unique~ (method) or ~df.shape~ (attribute).
- Origin of ~NameError~: name of object is not defined.
- Replacing values in data frame with ~df.replace(to_replace,value)~
- Difference between positional and keyword function arguments
- Creating a barplot with ~plotly.express.bar~.
- Creating a barplot with ~matplotlib.pyplot.bar~.
- Customizing ~plt~ barplot with title, labels, gridlines.
- Accessing all contents of a module with ~dir~, e.g. ~dir(plt.bar)~.
- Using auto-completion in IPython to see what's available.

[[https://app.datacamp.com/workspace/w/54035cd7-348d-43b9-b951-5a7c94725477][Completed notebook from the class.]]

* Sep-5

** Review of last week:

*** Python / data science

Let's look at the test results (5/7) using Python:
1) Create a new Python notebook.
2) Import ~matplotlib.pyplot~ for graphics.
3) Create a list of test values called ~test~ (using ~[]~).
4) Plot the list as a histogram (using ~plt.hist~).
5) Add x and y labels and a title.

The solution notebook is [[https://app.datacamp.com/workspace/w/adcb3d21-4098-4613-8444-2ce29cfaae4e][here]].

The code is here:
#+begin_src python :results silent
  import matplotlib.pyplot as plt
  test = [4.67,7.83,8.5,5.17,7.17]
  plt.hist(test,bins="auto",edgecolor="black")
  plt.xlabel("Points")
  plt.ylabel("Count")
  plt.title("Histogram of first test results")
  plt.show()
#+end_src


** Dörner's definition of complexity

** Modeling framework (lecture/discussion)

** Falling Penny Myth (Practice)

** Test 2 will be available shortly

* References

Maria A. /Introduction to Modeling and Simulation/. In: Andradottir S,
Healy KJ, Withers DH, Nelson BL, eds. Proceedings of the 1997 Winter
Simulation Conference; 1997. [[https://dl.acm.org/doi/pdf/10.1145/268437.268440][dl.acm.org/doi/pdf/10.1145/268437.268440]]
